name: Linux-Build

on:
  pull_request:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x64]
        mode: [debug, releasedbg]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - uses: actions/checkout@v2

    # Install libobs
    - name: Update apt repositories
      run: sudo apt-get update && sudo apt-get install libobs-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu file dpkg-dev qemu binfmt-support qemu-user-static pkg-config ninja-build doxygen clang python3 gcc g++ git git-lfs nasm cmake powershell libgl1-mesa-dev libsoundio-dev libjpeg-dev libvulkan-dev libx11-dev libxcursor-dev libxinerama-dev libxrandr-dev libusb-1.0-0-dev libssl-dev libudev-dev mesa-common-dev uuid-dev -y

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1

    # Prepare environment
    - name: Prepare files
      run: mv config.lua.linux.ci config.lua

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update

    # Cache xmake dependencies
    - uses: actions/cache@v2
      with:
        path: ~/.xmake/packages
        key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.mode }}-${{ hashFiles('xmake.lua', 'xmake-repo') }}-${{ hashFiles('~/.xmake/xmake.conf') }}-${{ hashFiles('~/.xmake/repositories/**') }}

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes --verbose

    # Build the plugin
    - name: Build obs-kinect
      run: xmake

    # Install the result files
    - name: Install obs-kinect
      run: xmake install -vo package

    # Upload artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
        path: package/bin
